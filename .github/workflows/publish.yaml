name: porter-bundle-publish

on:
  push:
    branches:
      - "*"
    tags:
      - v*

# Set up environment variables needed for the bundle.
# If these are sensitive, they should be set as secrets in the repository.
# To do this, go to settings -> secrets -> new secret.
env:
  REGISTRY: ghcr.io
  PORTER_VERSION: v1.0.0-beta.3
  KUBERNETES_PLUGIN_VERSION: v1.0.0-beta.3
  AZURE_PLUGIN_VERSION: v1.0.0-beta.2
  TERRAFORM_MIXIN_VERSION: v0.10.0
  VERSION: v1.0.0-beta.3

# A workflow can be made of many jobs, but this example puts all the steps under one job.
jobs:
  # Publish is the name of this job.
  publish:
    if: github.event_name == 'push'
    # Specify the type of machine you want the job to run on. We chose ubuntu-latest.
    runs-on: ubuntu-latest
    steps:
      # Check out code
      - uses: actions/checkout@v1
      # Login to github container registry to publish the bundle
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Docker Login
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      # Run publish.
      # # If any of the porter commands above fail, the workflow will stop, so your bundle will only be published if it works properly.
      # - name: Docker Publish
      #   run: |
      #     # Strip git ref prefix from version
      #     REF_VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
      #     CI_VERSION=${BUNDLE_VERSION}-${REF_VERSION}
      #     # Strip "v" prefix from tag name
      #     [[ "${{ github.ref }}" == "refs/tags/"* ]] && CI_VERSION=$(echo ${REF_VERSION} | sed -e 's/^v//')

      #     docker build --version $CI_VERSION && porter publish
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY }}/sgettys/porter-agent:${{ env.VERSION }}
          build-args: |
            PORTER_VERSION=${{ env.PORTER_VERSION }}
            AZURE_PLUGIN_VERSION=${{ env.AZURE_PLUGIN_VERSION }}
            TERRAFORM_MIXIN_VERSION=${{ env.TERRAFORM_MIXIN_VERSION }}
